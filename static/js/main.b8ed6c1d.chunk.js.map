{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Update/Update.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Update/Update.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFectchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Update","Date","toDateString","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8ed6c1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n    console.log(confirmed)\n    if(!confirmed) {\n        return 'Loading...'\n    }\n    \n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Infected\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={confirmed.value}\n                                duration={3}\n                                separator=\",\"\n                            />\n                            \n                        </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Recovered\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={3}\n                                separator=\",\"\n                            />\n                        </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Deaths\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={3}\n                                separator=\",\"\n                            />\n                        </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const  fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n\n        return {confirmed, recovered, deaths, lastUpdate};\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed:dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }))\n        return modifiedData\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n\n        return countries.map((country)=> country.name)\n    } catch (error) {\n        console.log(error);\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport {Line,Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData( await fetchDailyData());\n        }\n        fetchAPI();\n    },[]);\n\n    const lineChart = (\n        dailyData.length \n        ? (\n            <Line\n                data = {{\n                    labels: dailyData.map(({date}) => date),\n                    datasets: [{\n                        data: dailyData.map(({confirmed}) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill:true,\n                    },{\n                        data: dailyData.map(({deaths}) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        fill:true,\n                     \n                    }],\n                }}\n            />\n        ) : null\n    );\n    \n\n    const barChart = (\n        confirmed \n            ? (\n                <Bar \n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label:'People',\n                            backgroundColor: [\n                                'rgba(0,0,255,0.5)',\n                                'rgba(0,255,0,0.5)',\n                                'rgba(255,0,0,0.5',\n                            ],\n                            data:[confirmed.value,recovered.value,deaths.value]\n                        }]\n                    }} \n                    options={{\n                        legend:{display:false},\n                        title:{display:true,text:`Current state in ${country}`},\n                    }} \n                />\n            ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFectchedCountries] = useState([]);\n\n    useEffect(()=> {\n        const fetchAPI = async () => {\n            setFectchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    },[setFectchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\" \" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\nimport styles from './Update.module.css';\n\nconst Update = ({data:{lastUpdate}}) => {\n    return (\n        <div className={styles.container}>\n            Information accurate as of {new Date(lastUpdate).toDateString()}\n        </div>\n    );\n}\n\nexport default Update;","import React from 'react';\n\nimport {Cards, Chart, CountryPicker, Update } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        \n        this.setState({data:fetchedData})\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        this.setState({data:fetchedData,country:country})\n    }\n\n    render() {\n        const { data, country } = this.state;\n        \n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Update data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Cards data={data}/>\n                <Chart data={data} country={country}/>\n            \n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Update_container__gs2Ar\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}